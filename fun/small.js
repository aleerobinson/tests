const x = [5 >> 1, 14 & 15, 15 & 13, 9 << 1, 14 & 15, 22 >> 1, 0 | 4, 26 | 1, 22 >> 1, 14 & 15, 13 >> 1, 16 | 13, 62 >> 1, 5 ^ 2, 0 | 4, 22 >> 1, 22 >> 1, 14 & 15, 13 << 1, 23 ^ 1, 14 & 15, 25 ^ 8, 22 >> 1, 6 >> 1, 24 | 4, 62 >> 1, 24 | 6, 5 >> 3];
const y = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', ' ', '.', '!', '(', ')', '"', ''];
let z = [];

const e = (x, z, e) => {
  if (!z) throw e;
  return x.push(y[z]) && x;
};

try {
  x.reduce((x, y) => e(x, y, Function), z);
} catch (e) {
  new e(z.join(y[32]))();
}
